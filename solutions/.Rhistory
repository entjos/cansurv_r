melanoma_10y <- mutate( melanoma_10y, surv_yy1 = surv_mm/12)
# Split the survival time by year
melanoma_10y_spl <- survSplit(melanoma_10y, cut=0:9, end="surv_yy1", start="start",
event = "status" ) # event must be a charater variable
## Calculate follow-up time and recode start time as a factor
melanoma_10y_spl <- mutate(melanoma_10y_spl,
pt = surv_yy1 - start,
fu = as.factor(start) )
##(e) Tabulate (and produce a graph of) the rates by follow-up time
# Calculate the hazard rate by observation year
yearly_rates <- survRate(Surv(pt/1000, status == 1) ~ fu, data=melanoma_10y_spl)
yearly_rates <- survRate(Surv(pt/1000, status == 1) ~ fu, data=melanoma_10y_spl)
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
View(yearly_rates)
?matplot
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="o",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="b",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
View(melanoma_10y)
View(melanoma_10y_spl)
## Date: 2015-03-03
## Purpose: To do the solution for Biostat III exercises in R
## Author: Johan Zetterqvist
## Modified: Mark Clements, 2017-08-07
###############################################################################
###############################################################################
## Exercise 7
###############################################################################
## Install needed packages only need to be done once
## install.packages("foreign")
## install.packages("muhaz")
## install.packages("car")
## @knitr loadDependencies
library(biostat3)
library(dplyr)    # for data manipulation
library(car)      # for linearHypothesis
## @knitr loadPreprocess
## Read melanoma data
## Create a new dataset with only localised cancer
melanoma.l <- filter(biostat3::melanoma, stage=="Localised")
head( melanoma.l )
summary(melanoma.l)
## @knitr 7.a.i
## Plot Kaplan-Meier curve using survfit
## Create a new event indicator
melanoma.l <- mutate(melanoma.l,
death_cancer = as.numeric(status=="Dead: cancer") )
## Create a fitted object for our subcohort
## using survfit
sfit7a1 <- survfit(Surv(surv_mm, event=death_cancer) ~ year8594,
data = melanoma.l )
## Have a look at the fitted object
str(sfit7a1, 1)
## Plot the survival curve (with some bells and whistles)
plot(sfit7a1,
## No automatic labelling of the curve (we do that ourselves)
mark.time=F,
## Time is measured in months,  but we want to see it in years
xscale=12,
## Make the plot prettier
xlab="Years since diagnosis",
ylab="S(t)",
col=c("blue","red"),
lty=c("solid","dashed"))
## Add legend too
legend("bottomleft",legend=levels(melanoma.l$year8594),col=c("blue","red"),lty=c("solid","dashed"), bty="n")
### TRY IF YOU WANT ###
if (FALSE) {
library(survMisc)
## Note: `autoplot(sfit7a1)` was broken; I have submitted a pull request to fix this
## autoplot(sfit7a1)
## alternatively:
autoplot(sfit7a1, timeTicks = "custom", times= seq(0, 20*12, 5*12))
}
## @knitr 7.a.ii
## To plot smoothed hazards, we use the muhaz package (using the muhaz2 wrapper)
plot(muhaz2(Surv(surv_mm/12, status == "Dead: cancer") ~ year8594, data=melanoma.l),
xlab="Years since diagnosis", col=c("blue","red"), lty=1:2)
## @knitr 7.a.iii
## Compare with Kaplan-Meier plot
par(mfrow=c(1,2)) ## Two graphs in the same window
plot(sfit7a1,
## No automatic labelling of the curve (we do that ourselves)
mark.time=F,
## Time is measured in months,  but we want to see it in years
xscale=12,
## Make the plot prettier
xlab="Years since diagnosis",
ylab="S(t)",
col=c("blue","red"),
lty=c("solid","dashed"))
plot(muhaz2(Surv(surv_mm/12, status == "Dead: cancer") ~ year8594, data=melanoma.l),
xlab="Years since diagnosis", col=c("blue","red"),lty=c("solid","dashed"))
## @knitr 7.b
survRate(Surv(surv_mm, death_cancer) ~ year8594, data=melanoma.l)
## @knitr 7.c.i
## Calculate the incidence rate by time of diagnosis
## but with new variables
melanoma.l2 <- mutate(melanoma.l,
## Update the death indicator (only count deaths within 120 months)
## death_cancer = death_cancer * as.numeric(surv_mm<=120),
death_cancer = ifelse(surv_mm<=120 & status == "Dead: cancer",1,0),
## Create a new time variable
## surv_mm = pmin(surv_mm, 120)
surv_mm = ifelse(surv_mm<=120, surv_mm, 120)
)
## Calculate the rates on the truncated data
rates_by_diag_yr2 <- survRate(Surv(surv_mm, death_cancer) ~ year8594, data=melanoma.l2)
rates_by_diag_yr2
## @knitr 7.c.ii
## MRR full data
rates_by_diag_yr2[2, "rate"] / rates_by_diag_yr2[1, "rate"]
with(rates_by_diag_yr2[2:1,], poisson.test(event, tstop))
## @knitr 7.c.iii
## Use glm to estimate the rate ratios
## we scale the offset term to 1000 person-years
poisson7c <- glm( death_cancer ~ year8594 + offset( log( surv_mm/12/1000 ) ), family=poisson, data=melanoma.l2 )
summary( poisson7c )
## also for collapsed data
summary(glm( event ~ year8594 + offset( log( tstop/12/1000 ) ), family=poisson, data=rates_by_diag_yr2))
## IRR
eform(poisson7c)
## Note that the scaling of the offset term only has an impact on the intercept
summary( glm( death_cancer ~ year8594 + offset( log( surv_mm ) ),
family=poisson, data=melanoma.l2 ) )
## @knitr 7.d
## Add a new variable for year
melanoma.l2 <- mutate( melanoma.l2, surv_yy1 = surv_mm/12)
## Split follow up by year
melanoma.spl <- survSplit(melanoma.l2, cut=0:9, end="surv_yy1", start="start",
event="death_cancer")
## Calculate persontime and
## recode start time as a factor
melanoma.spl <- mutate(melanoma.spl,
pt = surv_yy1 - start,
fu = as.factor(start) )
## @knitr 7.e
## Calculate the incidence rate by observation year
yearly_rates <- survRate(Surv(pt/1000,death_cancer)~fu, data=melanoma.spl)
## Plot by year
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Incidence rate per 1000 person-years",
xlab="Years since diagnosis") )
## Date: 2015-03-03
## Purpose: To do the solution for Biostat III exercises in R
## Author: Johan Zetterqvist
## Modified: Mark Clements, 2017-08-07
###############################################################################
###############################################################################
## Exercise 7
###############################################################################
## Install needed packages only need to be done once
## install.packages("foreign")
## install.packages("muhaz")
## install.packages("car")
## @knitr loadDependencies
library(biostat3)
library(dplyr)    # for data manipulation
library(car)      # for linearHypothesis
## @knitr loadPreprocess
## Read melanoma data
## Create a new dataset with only localised cancer
melanoma.l <- filter(biostat3::melanoma, stage=="Localised")
head( melanoma.l )
summary(melanoma.l)
## @knitr 7.a.i
## Plot Kaplan-Meier curve using survfit
## Create a new event indicator
melanoma.l <- mutate(melanoma.l,
death_cancer = as.numeric(status=="Dead: cancer") )
## Create a fitted object for our subcohort
## using survfit
sfit7a1 <- survfit(Surv(surv_mm, event=death_cancer) ~ year8594,
data = melanoma.l )
## Have a look at the fitted object
str(sfit7a1, 1)
## Plot the survival curve (with some bells and whistles)
plot(sfit7a1,
## No automatic labelling of the curve (we do that ourselves)
mark.time=F,
## Time is measured in months,  but we want to see it in years
xscale=12,
## Make the plot prettier
xlab="Years since diagnosis",
ylab="S(t)",
col=c("blue","red"),
lty=c("solid","dashed"))
## Add legend too
legend("bottomleft",legend=levels(melanoma.l$year8594),col=c("blue","red"),lty=c("solid","dashed"), bty="n")
### TRY IF YOU WANT ###
if (FALSE) {
library(survMisc)
## Note: `autoplot(sfit7a1)` was broken; I have submitted a pull request to fix this
## autoplot(sfit7a1)
## alternatively:
autoplot(sfit7a1, timeTicks = "custom", times= seq(0, 20*12, 5*12))
}
## @knitr 7.a.ii
## To plot smoothed hazards, we use the muhaz package (using the muhaz2 wrapper)
plot(muhaz2(Surv(surv_mm/12, status == "Dead: cancer") ~ year8594, data=melanoma.l),
xlab="Years since diagnosis", col=c("blue","red"), lty=1:2)
## @knitr 7.a.iii
## Compare with Kaplan-Meier plot
par(mfrow=c(1,2)) ## Two graphs in the same window
plot(sfit7a1,
## No automatic labelling of the curve (we do that ourselves)
mark.time=F,
## Time is measured in months,  but we want to see it in years
xscale=12,
## Make the plot prettier
xlab="Years since diagnosis",
ylab="S(t)",
col=c("blue","red"),
lty=c("solid","dashed"))
plot(muhaz2(Surv(surv_mm/12, status == "Dead: cancer") ~ year8594, data=melanoma.l),
xlab="Years since diagnosis", col=c("blue","red"),lty=c("solid","dashed"))
## @knitr 7.b
survRate(Surv(surv_mm, death_cancer) ~ year8594, data=melanoma.l)
## @knitr 7.c.i
## Calculate the incidence rate by time of diagnosis
## but with new variables
melanoma.l2 <- mutate(melanoma.l,
## Update the death indicator (only count deaths within 120 months)
## death_cancer = death_cancer * as.numeric(surv_mm<=120),
death_cancer = ifelse(surv_mm<=120 & status == "Dead: cancer",1,0),
## Create a new time variable
## surv_mm = pmin(surv_mm, 120)
surv_mm = ifelse(surv_mm<=120, surv_mm, 120)
)
## Calculate the rates on the truncated data
rates_by_diag_yr2 <- survRate(Surv(surv_mm, death_cancer) ~ year8594, data=melanoma.l2)
rates_by_diag_yr2
## @knitr 7.c.ii
## MRR full data
rates_by_diag_yr2[2, "rate"] / rates_by_diag_yr2[1, "rate"]
with(rates_by_diag_yr2[2:1,], poisson.test(event, tstop))
## @knitr 7.c.iii
## Use glm to estimate the rate ratios
## we scale the offset term to 1000 person-years
poisson7c <- glm( death_cancer ~ year8594 + offset( log( surv_mm/12/1000 ) ), family=poisson, data=melanoma.l2 )
summary( poisson7c )
## also for collapsed data
summary(glm( event ~ year8594 + offset( log( tstop/12/1000 ) ), family=poisson, data=rates_by_diag_yr2))
## IRR
eform(poisson7c)
## Note that the scaling of the offset term only has an impact on the intercept
summary( glm( death_cancer ~ year8594 + offset( log( surv_mm ) ),
family=poisson, data=melanoma.l2 ) )
## @knitr 7.d
## Add a new variable for year
melanoma.l2 <- mutate( melanoma.l2, surv_yy1 = surv_mm/12)
## Split follow up by year
melanoma.spl <- survSplit(melanoma.l2, cut=0:9, end="surv_yy1", start="start",
event="death_cancer")
## Calculate persontime and
## recode start time as a factor
melanoma.spl <- mutate(melanoma.spl,
pt = surv_yy1 - start,
fu = as.factor(start) )
## @knitr 7.e
## Calculate the incidence rate by observation year
yearly_rates <- survRate(Surv(pt/1000,death_cancer)~fu, data=melanoma.spl)
## Plot by year
with(yearly_rates, matplot(fu,
cbind(rate, lower,
upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Incidence rate per 1000 person-years",
xlab="Years since diagnosis") )
source('~/cansurv_r/solutions/q111.R', echo=TRUE)
View(yearly_rates)
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("dashed","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
View(yearly_rates)
View(yearly_rates)
View(yearly_rates)
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
ylim=c(0,max(upper)),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
# Plot
with(yearly_rates, matplot(fu,
cbind(rate, lower, upper),
ylim=c(0,max(upper)),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
par(mfrow=c(1,2))
with(yearly_rates, matplot(as.numeric(as.character(fu))+0.5,
cbind(rate, lower,
upper),
ylim=c(0,max(upper)),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by time since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
hazfit_f <- muhaz2(Surv(surv_mm/12, status == 1) ~ 1, data = melanoma)
## scale hazard by 1000
plot(hazfit_f, xlab="Years since diagnosis",col="blue",lty="solid", haz.scale=1000, xlim=c(0,10))
with(yearly_rates, matplot(as.numeric(as.character(fu))+0.5,
cbind(rate, lower, upper),
ylim=c(0,max(upper)),
lty=c("solid","dashed","dashed"),
col=c("black","gray","gray"),
type="l",
main="Cancer deaths by years since diagnosis",
ylab="Hazard rate per 1000 person-years",
xlab="Years since diagnosis") )
poisson_g <- glm( status == 1 ~ fu + offset( log(pt) ),
family = poisson,
data = melanoma_10y_spl )
summary(poisson_g)
eform(poisson_g)
summary(poisson_h <- glm( status == 1 ~ fu + year8594 + offset( log(pt) ),
family = poisson,
data = melanoma_10y_spl ))
summary(poisson_h)
eform(poisson_h)
poisson_h2 <- glm( death_cancer ~ fu*year8594 + offset( log(pt) ),
family=poisson,
data=melanoma_10y_spl )
summary(poisson_h2)
eform(poisson_h2)
poisson_h2 <- glm( status == 1 ~ fu*year8594 + offset( log(pt) ),
family=poisson,
data=melanoma_10y_spl )
summary(poisson_h2)
eform(poisson_h2)
poisson_i <- glm( status == 1 ~ fu + year8594 + sex + agegrp + offset( log(pt) ),
family=poisson,
data=melanoma_10y_spl )
summary(poisson_i)
eform(poisson_i)
View(melanoma_10y_spl)
poisson_i <- glm( status == 1 ~ fu + year8594 + sex + agegrp + offset(log(pt)),
family=poisson,
data=melanoma_10y_spl)
summary(poisson_i)
eform(poisson_i)
source('~/cansurv_r/solutions/q111.R', echo=TRUE)
drop1(poisson_i, ~agegrp, test="Chisq")
View(melanoma_10y)
linearHypothesis(poisson_i,c("agegrp45-59 = 0","agegrp60-74 = 0","agegrp75+ = 0"))
poisson_i <- glm( status == 1 ~ fu + year8594 + sex + agegrp + offset(log(pt)),
family=poisson,
data=melanoma_10y_spl)
summary(poisson_i)
eform(poisson_i)
class(agegrp)
class(melanoma$agegrp)
melanoma <- read_dta("melanoma.dta")%>%
filter(stage == 1)%>%
mutate(year8594 = ifelse(year8594 == 1, "Diagnosed 85-94", "Diagnosed 75-84"),
agegrp = as.factor(agegrp),
sex = as.factor(sex))
## Exercise 111
## Created: 2021-03-15 Enoch Chen
## Edited:  2021-03-15 Enoch Chen
## Reference: Biostatistics III in R. https://biostat3.net/download/R/solutions/q7.html
###############################################################################
## Load the packages
library(biostat3)
source('~/cansurv_r/solutions/q111.R', echo=TRUE)
drop1(poisson_i, ~agegrp, test="Chisq")
##(i)-iii. Wald test of the overall effect of age and interpret the results
linearHypothesis(poisson_i,c("agegrp1 = 0","agegrp2 = 0","agegrp3 = 0"))
poisson_j <- glm( status == 1 ~ fu + agegrp + year8594*sex + offset( log(pt) ),
family=poisson, data=melanoma_10y_spl )
poisson_j <- glm( status == 1 ~ fu + agegrp + year8594*sex + offset( log(pt) ),
family=poisson, data=melanoma_10y_spl )
summary(poisson_j)
eform(poisson_j)
##(k) Calculate effect of sex for year8594==2
hr_k <- exp(coef(poisson_j))
hr_k["sex2"]
hr_k <- exp(coef(poisson_j))
hr_k["sex2"]
# Explanation: The effect of sex for patients diagnosed 1975–84 is 0.6031338
hr_k["sex2"]*hr_k["year8594Diagnosed 85-94:sex2"]
# Explanation: The effect of sex for patients diagnosed 1985–94 is 0.6031338
